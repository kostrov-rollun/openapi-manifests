openapi: 3.0.0
info:
  version: "1"
  title: "Dropshipping"
  description: Long running tasks interface
servers:
  - url: http://suppliers/openapi/Dropshipping/v1
tags: 
  - name: Order
  - name: ShippingMethod
  - name: Parcel
paths:
  "/Order":
    post:
      tags:
        - Order
      summary: "Make an order"
      description: "To can make an order you need to specify order information: address, products, supplier and shipping method."
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateRequest'
      responses:
        "200":
          description: "Order successfully created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreateResponse'
        "409":
          description: "Order with specified id already exist."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  "/Order/{id}":
    get:
      tags:
        - Order
      summary: 'Get info about order'
      description: "Returns information of order by orderId"
      parameters:
        - in: path
          name: id
          description: Order id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        "404":
          description: "Order with specified id doesn't exist."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  "/ShippingMethod":
    get:
      tags:
        - ShippingMethod
      summary: "Get all allowed shipping methods for order"
      description: "Returns list of all allowed shipping methods by order info."
      parameters:
        - in: query
          name: "order"
          description: "Get order list from date"
          required: true
          schema:
            $ref: '#/components/schemas/OrderInfo'
      responses:
        "200":
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethodsListResponse'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  # "/ShippingMethod/{id}":
  #   get:
  #     tags:
  #       - ShippingMethod
  #     summary: "Get info about specific shipping method"
  #     description: "Returns list of all allowed shipping methods by order info."
  #     parameters:
  #       - in: path
  #         name: id
  #         description: Shipping method id
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: 'Success'
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ShippingMethodResponse'
  #       "500":
  #         description: 'Some internal error'
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ErrorResponse'
        
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        messages: 
          type: array
          items:
            $ref: "#/components/schemas/Message"
      description: "Message field is not required"
    Message:
      type: object
      properties:
        level:
          type: string
          enum:
            - info
            - warning
            - error
        text:
          type: string
          description: Message, that describes what went wrong
    SuccessResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      type: object
      properties:
        data:
          type: object
    
    ## Order Responses
    OrderResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Order'
    OrderCreateResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrderCreateInfo'
    OrderCreateInfo:
      type: object
      properties:
        id:
          type: string
          description: Unique identificator of task
        timeout:
          type: integer
          example: '3'
        stage:
          type: string
          description: 'Current stage'
          enum: ['inQueue', 'inProgress', 'done']
        state:
          type: string
          description: 'Current state'
          enum: ['pending','fulfilled','rejected']
        startTime:
          type: string
          description: 'Task start time UTC'
          example: '2020-11-20T13:14:15Z'
        result:
          # how to make nullable ?
          $ref: '#/components/schemas/OrderCreateResult'
    OrderCreateResult:
      type: object
      nullable: true
      allOf:
        - $ref: '#/components/schemas/Order'
        
    ## Shipping Method Responses
    ShippingMethodsListResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ShippingMethod'
    # ShippingMethodResponse:
    #   allOf:
    #     - $ref: '#/components/schemas/SuccessResponse'
    #   type: object
    #   properties:
    #     data:
    #       $ref: '#/components/schemas/ShippingMethod'        
    
        
    ## Requests
    OrderCreateRequest:
      allOf:
        - $ref: '#/components/schemas/Order'
          
    ## Resources
    Order:
      allOf:
        - $ref: '#/components/schemas/OrderInfo'
      type: object
      properties:
        id:
          type: string
          description: Unique identificator of order
        shippingMethod:
          type: string
          description: Name of shipping method
    Supplier:
      type: object
      oneOf:
        - $ref: '#/components/schemas/RockyCart'
        - $ref: '#/components/schemas/Autodist'
        - $ref: '#/components/schemas/PartsUnlimited'
    RockyCart:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Supplier name
          enum:
            - rockyCart
        paymentCard:
          type: string
          description: Id of the card from which the payment is debited
          example: "538364"
    OrderInfo:
      type: object
      properties:
        receiver:
          $ref: '#/components/schemas/Customer'
        products:
          type: array
          description: List of products to delivery
          items:
            $ref: '#/components/schemas/Product'
        supplier:
          $ref: '#/components/schemas/Supplier'
    ShippingMethod:
      type: object
      properties:
        id:
          # Probably enum specific for each supplier
          type: string
          description: Unique identificator of shipping method
        carrier:
          $ref: '#/components/schemas/Carrier'
        price:
          # TODO: decide to remove or keep this field
          type: string
          nullable: true
          description: Price for this shipping method (if available)
        estDeliveryDate:
          type: string
          format: date-time
          nullable: true
          description: The estimated delivery date provided by the carrier (if available)
    Autodist:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Supplier name
          enum:
            - autodist
    PartsUnlimited:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Supplier name
          enum:
            - partsUnlimited
    Parcel:
      type: object
      properties:
        carrier:
          $ref: '#/components/schemas/Carrier'
        trackNumber:
          type: string
          description: The tracking code provided by the carrier
          example: '9400100000000000000000'
        estDeliveryDate:
          type: string
          format: date-time
          nullable: true
          description: The estimated delivery date provided by the carrier (if available)
        products:
          type: array
          description: List of products in this parcel
          items:
            $ref: '#/components/schemas/Product'
    Carrier:
          type: string
          enum:
            - UPS
            - USPS
            - FedEx
    Product:
      type: object
      required:
        - code
        - quantity
      properties:
        code:
          type: string
          description: Rollun Id
          example: VW6A4
        quantity:
          type: integer
          description: Quantity of products
          example: 2
    Customer:
      type: object
      properties:
        name:
          type: string
          description: Full name
          example: Shawn Weisweaver
        phone:
          type: string
          nullable: true
          description: Phone number to reach the person
          example: "415-123-4567"
        email:
          type: string
        address:
          $ref: "#/components/schemas/Address"
    Address:
      type: object
      required: 
        - name
        - country
        - state
        - city
        - postalCode
        - address1
      properties:
        country:
          type: string
          description: "Country code by ISO 3166 aplha-2 code"
          enum: 
            - US
        state:
          type: string
          description: US state code
          example: CA
        city:
          type: string
          description: Full city name
          example: San Francisco
        postalCode:
          type: string
          description: ZIP or postal code
          example: "94104"
        address1:
          type: string
          description: First line of the address
          example: "417 Montgomery St"
        address2:
          type: string
          nullable: true
          description: Second line of the address
          example: "Floor 5"