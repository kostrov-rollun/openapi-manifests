openapi: 3.0.0
info:
  version: "1"
  title: "Dropshipping"
  description: Long running tasks interface
servers:
  - url: http://suppliers/openapi/Dropshipping/v1
tags:
  - name: Order
  - name: CalculatedShippingMethod
paths:
  "/Order":
    post:
      tags:
        - Order
      summary: "Make an order"
      description: "To can make an order you need to specify order information: address, products, supplier and shipping method."
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPostRequest'
      responses:
        "200":
          description: "Order successfully created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResult'
        "409":
          description: "Order with specified id already exist."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  "/Order/{id}":
    get:
      tags:
        - Order
      summary: 'Get info about order'
      description: "Returns information of order by orderId"
      parameters:
        - in: path
          name: id
          description: Order id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResult'
        "404":
          description: "Order with specified id doesn't exist."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  "/ClculatedShippingMethod":
    post:
      tags:
        - CalculatedShippingMethod
      summary: "Get all allowed shipping methods for order"
      description: "Returns list of all allowed shipping methods by order info."
      responses:
        "200":
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedShippingMethodsResult'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
components:
  schemas:
    ErrorResult:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
      description: "Message field is not required"
    Message:
      type: object
      properties:
        level:
          type: string
          enum:
            - info
            - warning
            - error
        text:
          type: string
          description: Message, that describes what went wrong
    SuccessResult:
      allOf:
        - $ref: '#/components/schemas/ErrorResult'
      type: object
      properties:
        data:
          type: object

    ## Order results
    OrderResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Order'
          

    ## Calculated Shipping Method Results
    CalculatedShippingMethodsResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CalculatedShippingMethod'

    ## Requests
    OrderPostRequest:
      allOf:
        - $ref: '#/components/schemas/Order'

    ## Resources
    Order:
      type: object
      properties:
        id:
          type: string
          description: Unique identificator of order
        shippingMethodName:
          type: string
          example: USPS Priority
          description: Name of shipping method
        supplierCode:
          type: string
          example: autodist
          description: Code of supplier
        status:
          type: string
          # Not complete
          enum: ['created', 'done']
        shippingTotalPrice:
          type: number
          nullable: true
          example: 9.45
        itemsTotalPrice:
          type: number
          example: 20.94
        itemsTax:
          type: number
          example: 0
        totalTax:
          type: number
          example: 0
        totalPrice: 
          type: number
          example: 30.39
        originalOrder:
          type: array
          items:
            type: object
        receiver:
          $ref: '#/components/schemas/Customer'
        items:
          type: array
          description: List of ordered products
          items:
            $ref: '#/components/schemas/OrderItem'
        shipments:
          type: array
          description: List of all parcels that sent this order
          items:
            $ref: '#/components/schemas/Shipment'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CalculatedShippingMethod:
      type: object
      properties:
        supplierCode:
          type: string
          example: autodist
          description: The code of the supplier whose shipping methods are listed
        itemsTotalPrice:
          type: number
          example: 20.94
          description: The total price for the goods of this supplier
        shippingMethods:
          type: array
          items:
            $ref: '#/components/schemas/ShippingMethod'
    ShippingMethod:
      type: object
      properties:
        name:
          type: string
          description: Unique name for one supplier
          example: "USPS Priority"
        totalPrice:
          type: string
          nullable: true
          description: Price for this shipping method (if available)
          example: 9.45
        carrierCode:
          $ref: '#/components/schemas/CarrierCode'
        shippingSpeed:
          $ref: '#/components/schemas/ShippingSpeed'
    ShippingSpeed:
      type: object
      properties:
        estDeliveryDate:
          type: string
          format: date-time
          description: The estimated delivery date
        trackNumberReceiptDate:
          type: string
          format: date-time
          nullable: true
          description: The estimated timestamp when the track number will be received (if available)
        firstScanDate:
          type: string
          format: date-time
          nullable: true
          description: The estimated timestamp when the first carrier tracking scan occurred (if available)
    Shipment:
      type: object
      properties:
        trackNumber:
          type: string
          description: The tracking code provided by the carrier
          example: '9400100000000000000000'
        shippingPrice:
          type: number
          description: "Total price of this shipment"
          example: 9.45
          nullable: true
        carrierCode:
          $ref: '#/components/schemas/CarrierCode'
    CarrierCode:
      type: string
      enum:
        - UPS
        - USPS
        - FedEx
    OrderItem:
      allOf:
        - $ref: '#/components/schemas/Item'
      type: object
      properties:
        unitPrice:
          type: number
          example: 10.47
          description: price for one unit of item
          nullable: true
        trackNumber:
          type: string
          description: The tracking code of the shipment this item is in
          example: '9400100000000000000000'
          nullable: true
    Item:
      type: object
      required:
        - code
        - quantity
      properties:
        code:
          type: string
          description: Rollun Id
          example: VW6A4
        quantity:
          type: integer
          description: Quantity of products
          example: 2
    Customer:
      type: object
      properties:
        name:
          type: string
          description: Full name
          example: Shawn Weisweaver
        phone:
          type: string
          nullable: true
          description: Phone number to reach the person
          example: "415-123-4567"
        email:
          type: string
        address:
          $ref: "#/components/schemas/Address"
    Address:
      type: object
      required:
        - name
        - country
        - state
        - city
        - postalCode
        - address1
      properties:
        country:
          type: string
          description: "Country code by ISO 3166 aplha-2 code"
          enum:
            - US
        state:
          type: string
          description: US state code
          example: CA
        city:
          type: string
          description: Full city name
          example: San Francisco
        postalCode:
          type: string
          description: ZIP or postal code
          example: "94104"
        address1:
          type: string
          description: First line of the address
          example: "417 Montgomery St"
        address2:
          type: string
          nullable: true
          description: Second line of the address
          example: "Floor 5"