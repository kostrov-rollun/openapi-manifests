openapi: 3.0.0
info:
  version: "1"
  title: "SuppliersOrdersCreation"
servers:
  - url: http://suppliers/openapi/SuppliersOrdersCreation/v1
tags:
  - name: CreateOrderTasks
paths:
  "/createOrderTasks":
    post:
      tags:
        - CreateOrderTasks
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationTaskInfoResult'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrerationTaskPostRequest'
    get:
      tags:
        - CreateOrderTasks
      summary: "Get list of tasks"
      parameters:
        - name: payloadIdempotencyKey
          in: query
          description: Filtering by payload.idempotencyKey
          required: false
          schema:
            type: string
            example: '12345'
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreationTaskInfoListResult"
        '500':
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              
  "/createOrderTasks/{id}":
    get:
      tags:
        - CreateOrderTasks
      summary: 'Get info about task state'
      parameters:
        - in: path
          name: id
          description: Id of task
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationTaskInfoResult'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
components:
  schemas:
    # Basic results components
    ErrorResult:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
      description: "Message field is not required"
    Message:
      type: object
      properties:
        level:
          type: string
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
        type:
          type: string
          enum:
            - UNDEFINED
            - INVALID_RESPONSE
          description: >
            You can expose this enum for all your errors
            UNDEFINED - Any undefined message type
            INVALID_RESPONSE - A message generated by the client stating that the response could not be decoded
        text:
          type: string
          description: Message, that describes what went wrong
    SuccessResult:
      allOf:
        - $ref: '#/components/schemas/ErrorResult'
      type: object
      properties:
        data:
          type: object
          
    CreationTaskInfoListResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          type: array
          items: 
            $ref: '#/components/schemas/CreationTaskInfo'
    
    CreationTaskInfoResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreationTaskInfo'
          
    
    CrerationTaskPostRequest:
      type: object
      required:
        - id
        - payload
      properties:
        id:
          type: string
          description: Client generated unique id
          example: '12345'
        payload:
          $ref: '#/components/schemas/CrerationTaskPayload'
          
    CreationTaskInfo:
      type: object
      required:
        - id
        - stage
        - status
      properties:
        id:
          type: string
          description: Client generated unique id
          example: '12345'
        stage:
          $ref: '#/components/schemas/Stage'
        status:
          $ref: '#/components/schemas/Status'
        payload:
          $ref: '#/components/schemas/CrerationTaskPayload'
        result:
          $ref: '#/components/schemas/CreationTaskResult'
    
    Stage:
      type: object
      required:
        - stage
        - all
      properties:
        value:
          type: string
          description: 'Current stage'
          example: 'creating'
        all:
          type: array
          description: 'All possible stages'
          items:
            type: string
          example: [ 'creating', 'done' ]
    
    Status:
      type: object
      required:
        - state
        - all
      properties:
        value:
          type: string
          description: 'Current state'
          example: 'pending'
        all:
          type: array
          description: 'All possible states'
          items:
            type: string
          example: [ 'pending', 'in_progress', 'fulfilled', 'rejected' ]
          
    CrerationTaskPayload:
      type: object
      required:
        - idempotencyKey
        - supplierCode
        - shippingMethodName
        - items
      properties:
        idempotencyKey:
          type: string
          example: 
          description: An idempotency key is a unique value generated by the client to not duplicate orders. Multiple requests with same idempotency key create order only once.
        supplierCode:
          type: string
          description: Supplier code
        shippingMethodName:
          type: string
          description: >
            Supplier shipping method name
            Pickup - for pickup of orders. In this case, you do not need to define a recipient, but a warehouse is required for each item.
        receiver:
          $ref: '#/components/schemas/Customer'
        items:
          type: array
          description: List of items to order
          items:
            $ref: '#/components/schemas/Item'
            
    CreationTaskResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrderNumber'
        messages:
          type: array
          items:
            $ref: "#/components/schemas/CreationTaskResultMessage"
          
    OrderNumber:
      type: object
      properties:
        orderId:
          type: string
          description: id of created order
          example: 'Autodist | AU431'
          
    CreationTaskResultMessage:
      type: object
      properties:
        level:
          type: string
          enum:
            - warning
            - notice
            - info
        type:
          type: string
          enum:
            - UNDEFINED
            - IDEMPOTENT_PARAMETER_MISMATCH
          description: >
            If you add a new type to this manifest, then also add it to the SuppliersOrders manifest.
            UNDEFINED - Any undefined message type
            IDEMPOTENT_PARAMETER_MISMATCH
        text:
          type: string
          description: Message, that describes what went wrong
    
    Item:
      type: object
      required:
        - rid
        - quantity
      properties:
        rid:
          type: string
          description: Rollun Id
          example: VW6A4
        quantity:
          type: integer
          description: Quantity of products
          example: 2
        warehouse:
          type: string
          nullable: true
          description: >
            The name of the warehouse from where you want to send the goods. Specific for each supplier.
            If no warehouse has been specified, then the supplier can choose the appropriate one, depending on its distance to the client and the availability of items.
            If a warehouse is specified, then the supplier must send from it, or report an error, why he cannot do this
            Required for pickup orders.
            TuckerRocky - ['TX']
            PartsUnlimited - ['NC']
    Customer:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
          description: Full name
          example: Shawn Weisweaver
        phone:
          type: string
          nullable: true
          description: Phone number to reach the person
          example: "415-123-4567"
        email:
          type: string
          nullable: true
          description: Email address to reach the person
          example: "test@mail.loc"
        address:
          $ref: "#/components/schemas/Address"
    Address:
      type: object
      required:
        - country
        - state
        - city
        - postalCode
        - address1
      properties:
        country:
          type: string
          description: "Country code"
        state:
          type: string
          description: US state code
          example: CA
        city:
          type: string
          description: Full city name
          example: San Francisco
        postalCode:
          type: string
          description: ZIP or postal code
          example: "94104"
        address1:
          type: string
          description: First line of the address
          example: "417 Montgomery St"
        address2:
          type: string
          nullable: true
          description: Second line of the address
          example: "Floor 5"