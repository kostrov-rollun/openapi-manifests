openapi: 3.0.0
info:
  version: "1"
  title: "Deals"
  description: Get deals info
servers:
  - url: http://megaplan-union/openapi/Deals/v1
tags:
  - name: Deals
paths:
  "/dropship/queryBySupplierOrder":
    get:
      tags:
        - Deals
      summary: "Get dropship deal by supplier order"
      parameters:
        - in: query
          name: "supplierName"
          description: "Supplier name (same as id from https://rollun.net/suppliers)"
          required: true
          example: "Autodist"
          schema:
            type: string
        - in: query
          name: "orderNumber"
          description: "Order number as in supplier"
          required: true
          example: "0A423"
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DropshipResult"
        "500":
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  "/bag/queryBySupplierOrder":
    get:
      tags:
        - Deals
      summary: "Get bag deal by supplier order"
      parameters:
        - in: query
          name: "supplierName"
          description: "Supplier name (same as id from https://rollun.net/suppliers)"
          required: true
          example: "Autodist"
          schema:
            type: string
        - in: query
          name: "orderNumber"
          description: "Order number as in supplier"
          required: true
          example: "0A423"
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BagResult"
        "500":
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
components:
  schemas:
    ErrorResult:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
      description: "Message field is not required"
    Message:
      type: object
      properties:
        level:
          type: string
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
        type:
          type: string
          enum:
            - UNDEFINED
            - INVALID_RESPONSE
          description: >
            UNDEFINED - Any undefined message type
            INVALID_RESPONSE - A message generated by the client stating that the response could not be decoded
        text:
          type: string
          description: Message, that describes what went wrong
    SuccessResult:
      allOf:
        - $ref: '#/components/schemas/ErrorResult'
      type: object
      properties:
        data:
          type: object
    DropshipResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Dropship'
    BagResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Bag'

    ## Resource object
    Deal:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Deal id as in Megaplan
          example: '152028'

    Dropship:
      allOf:
        - $ref: '#/components/schemas/Deal'
      type: object
      required:
        - customer
      properties:
        customer:
          allOf:
            - $ref: '#/components/schemas/Customer'

    Bag:
      allOf:
        - $ref: '#/components/schemas/Deal'
      type: object

    Customer:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
          description: Full name
          example: Shawn Weisweaver
        phone:
          type: string
          nullable: true
          description: Phone number to reach the person
          example: "415-123-4567"
        email:
          type: string
          nullable: true
          description: Email address to reach the person
          example: "test@mail.loc"
        address:
          $ref: "#/components/schemas/Address"

    Address:
      type: object
      required:
        - country
        - state
        - city
        - postalCode
        - address1
      properties:
        country:
          type: string
          description: "Country code"
        state:
          type: string
          description: US state code
          example: CA
        city:
          type: string
          description: Full city name
          example: San Francisco
        postalCode:
          type: string
          description: ZIP or postal code
          example: "94104"
        address1:
          type: string
          description: First line of the address
          example: "417 Montgomery St"
        address2:
          type: string
          nullable: true
          description: Second line of the address
          example: "Floor 5"